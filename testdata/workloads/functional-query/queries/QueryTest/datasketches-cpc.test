====
---- QUERY
# Use a small table for testing Datasketches CPC functions through Impala to make sure
# that these approximate functions give the correct result. For testing Impala
# functionality no need to test how Datasketches CPC approximates count distint values
# so a small table is enough.
select
    ds_cpc_estimate(ds_cpc_sketch(tinyint_col)),
    ds_cpc_estimate(ds_cpc_sketch(int_col)),
    ds_cpc_estimate(ds_cpc_sketch(bigint_col)),
    ds_cpc_estimate(ds_cpc_sketch(float_col)),
    ds_cpc_estimate(ds_cpc_sketch(double_col)),
    ds_cpc_estimate(ds_cpc_sketch(string_col))
from functional_parquet.alltypessmall
---- RESULTS
10,10,10,10,10,10
---- TYPES
BIGINT,BIGINT,BIGINT,BIGINT,BIGINT,BIGINT
====
---- QUERY
select
    ds_cpc_sketch_and_estimate(tinyint_col),
    ds_cpc_sketch_and_estimate(int_col),
    ds_cpc_sketch_and_estimate(bigint_col),
    ds_cpc_sketch_and_estimate(float_col),
    ds_cpc_sketch_and_estimate(double_col),
    ds_cpc_sketch_and_estimate(string_col)
from functional_parquet.alltypessmall
---- RESULTS
10,10,10,10,10,10
---- TYPES
BIGINT,BIGINT,BIGINT,BIGINT,BIGINT,BIGINT
====
---- QUERY
# Check that unsupported types give error with ds_cpc_sketch().
select ds_cpc_sketch(bool_col) from functional_parquet.alltypessmall;
---- CATCH
AnalysisException: No matching function with signature: ds_cpc_sketch(BOOLEAN)
====
---- QUERY
select ds_cpc_sketch(smallint_col) from functional_parquet.alltypessmall;
---- CATCH
AnalysisException: No matching function with signature: ds_cpc_sketch(SMALLINT)
====
---- QUERY
select ds_cpc_sketch(cast(date_string_col as date format 'MM/DD/YYYY'))
from functional_parquet.alltypessmall;
---- CATCH
AnalysisException: No matching function with signature: ds_cpc_sketch(DATE)
====
---- QUERY
select ds_cpc_sketch(d1) from functional_parquet.decimal_tbl;
---- CATCH
AnalysisException: No matching function with signature: ds_cpc_sketch(DECIMAL(9,0))
====
---- QUERY
# Check that unsupported types give error with ds_cpc_sketch_and_estimate().
select ds_cpc_sketch_and_estimate(bool_col) from functional_parquet.alltypessmall;
---- CATCH
AnalysisException: No matching function with signature: ds_cpc_sketch_and_estimate(BOOLEAN)
====
---- QUERY
select ds_cpc_sketch_and_estimate(smallint_col) from functional_parquet.alltypessmall;
---- CATCH
AnalysisException: No matching function with signature: ds_cpc_sketch_and_estimate(SMALLINT)
====
---- QUERY
select ds_cpc_sketch_and_estimate(cast(date_string_col as date format 'MM/DD/YYYY'))
from functional_parquet.alltypessmall;
---- CATCH
AnalysisException: No matching function with signature: ds_cpc_sketch_and_estimate(DATE)
====
---- QUERY
select ds_cpc_sketch_and_estimate(d1) from functional_parquet.decimal_tbl;
---- CATCH
AnalysisException: No matching function with signature: ds_cpc_sketch_and_estimate(DECIMAL(9,0))
====
---- QUERY
# Check if CPC works with null values.
select
    ds_cpc_estimate(ds_cpc_sketch(null_str)),
    ds_cpc_estimate(ds_cpc_sketch(null_int)),
    ds_cpc_estimate(ds_cpc_sketch(null_double)),
    ds_cpc_estimate(ds_cpc_sketch(some_nulls)),
    ds_cpc_sketch_and_estimate(null_str),
    ds_cpc_sketch_and_estimate(null_int),
    ds_cpc_sketch_and_estimate(null_double),
    ds_cpc_sketch_and_estimate(some_nulls)
from functional_parquet.nullrows;
---- RESULTS
NULL,NULL,NULL,6,NULL,NULL,NULL,6
---- TYPES
BIGINT,BIGINT,BIGINT,BIGINT,BIGINT,BIGINT,BIGINT,BIGINT
====
---- QUERY
# Check if CPC works for empty datasets.
select
    ds_cpc_estimate(ds_cpc_sketch(field)),
    ds_cpc_estimate(ds_cpc_sketch(f2)),
    ds_cpc_sketch_and_estimate(field),
    ds_cpc_sketch_and_estimate(f2)
from functional_parquet.emptytable;
---- RESULTS
NULL,NULL,NULL,NULL
---- TYPES
BIGINT,BIGINT,BIGINT,BIGINT
====
---- QUERY
# Write sketches to a table as string and get an estimate from the written sketch.
# Note, the plan is to write sketches as binary instead of strings. For this we have to
# wait for the binary support (IMPALA-9482).
create table cpc_sketch_store
    (year int, month int, date_sketch string, float_sketch string)
stored as parquet;
insert into cpc_sketch_store
    select
        year,
        month,
        ds_cpc_sketch(date_string_col),
        ds_cpc_sketch(float_col)
    from functional_parquet.alltypessmall
    group by year, month;
select
    year,
    month,
    ds_cpc_estimate(date_sketch),
    ds_cpc_estimate(float_sketch)
from cpc_sketch_store order by month;
---- RESULTS
2009,1,3,10
2009,2,3,10
2009,3,3,10
2009,4,3,10
---- TYPES
INT,INT,BIGINT,BIGINT
====
---- QUERY
# Check that ds_cpc_estimate returns error for strings that are not serialized sketches.
select ds_cpc_estimate(date_string_col) from functional_parquet.alltypestiny;
---- CATCH
UDF ERROR: Unable to deserialize sketch.
====
---- QUERY
# Check that ds_cpc_estimate returns null for null and empty string inputs.
select ds_cpc_estimate(b), ds_cpc_estimate(c) from functional_parquet.nulltable;
---- RESULTS
NULL,NULL
---- TYPES
BIGINT,BIGINT
====
---- QUERY
# Check that sketches made by Hive can be read and used for estimating by Impala.
select
    ds_cpc_estimate(ti) as ti,
    ds_cpc_estimate(i) as i,
    ds_cpc_estimate(bi) as bi,
    ds_cpc_estimate(f) as f,
    ds_cpc_estimate(d) as d,
    ds_cpc_estimate(s) as s,
    ds_cpc_estimate(c) as c,
    ds_cpc_estimate(v) as v,
    ds_cpc_estimate(nc) as nc
from cpc_sketches_from_hive;
---- TYPES
BIGINT,BIGINT,BIGINT,BIGINT,BIGINT,BIGINT,BIGINT,BIGINT,BIGINT
---- RESULTS
5,7,6,6,7,4,4,3,NULL
====
---- QUERY
# Check if CPC works with empty strings.
create table empty_string (s string, v varchar(1), c char(1));
insert into empty_string values
    ("", cast("" as varchar(1)), cast("" as char(1))),
    ("a", cast("a" as varchar(1)), cast("a" as char(1))),
    ("", cast("" as varchar(1)), cast("" as char(1))),
    ("b", cast("b" as varchar(1)), cast("b" as char(1))),
    ("b", cast("b" as varchar(1)), cast("b" as char(1)));
select
    ds_cpc_estimate(ds_cpc_sketch(s)),
    ds_cpc_estimate(ds_cpc_sketch(v)),
    ds_cpc_estimate(ds_cpc_sketch(c))
from empty_string
---- RESULTS
2,2,3
---- TYPES
BIGINT,BIGINT,BIGINT
====
