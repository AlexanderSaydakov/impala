====
---- QUERY
-- Test HASH partitioning
create table simple_hash (id int, name string, valf float, vali bigint,
  PRIMARY KEY (id, name)) DISTRIBUTE BY HASH(id) INTO 4 BUCKETS,
  HASH(name) INTO 2 BUCKETS STORED AS KUDU
---- RESULTS
====
---- QUERY
show table stats simple_hash
---- LABELS
# Rows,Start Key,Stop Key,Leader Replica,# Replicas
---- RESULTS
-1,'','0000000000000001',regex:.*?:\d+,3
-1,'0000000000000001','00000001',regex:.*?:\d+,3
-1,'00000001','0000000100000001',regex:.*?:\d+,3
-1,'0000000100000001','00000002',regex:.*?:\d+,3
-1,'00000002','0000000200000001',regex:.*?:\d+,3
-1,'0000000200000001','00000003',regex:.*?:\d+,3
-1,'00000003','0000000300000001',regex:.*?:\d+,3
-1,'0000000300000001','',regex:.*?:\d+,3
---- TYPES
INT,STRING,STRING,STRING,INT
====
---- QUERY
-- Test HASH and RANGE partitioning
create table simple_hash_range (id int, name string, valf float, vali bigint,
  PRIMARY KEY (id, name)) DISTRIBUTE BY HASH(id) INTO 4 BUCKETS,
  RANGE(id, name) SPLIT ROWS ((10, 'martin'), (20, 'Peter')) STORED AS KUDU
---- RESULTS
====
---- QUERY
show table stats simple_hash_range
---- LABELS
# Rows,Start Key,Stop Key,Leader Replica,# Replicas
---- RESULTS
-1,'','000000008000000A6D617274696E',regex:.*?:\d+,3
-1,'000000008000000A6D617274696E','00000000800000145065746572',regex:.*?:\d+,3
-1,'00000000800000145065746572','00000001',regex:.*?:\d+,3
-1,'00000001','000000018000000A6D617274696E',regex:.*?:\d+,3
-1,'000000018000000A6D617274696E','00000001800000145065746572',regex:.*?:\d+,3
-1,'00000001800000145065746572','00000002',regex:.*?:\d+,3
-1,'00000002','000000028000000A6D617274696E',regex:.*?:\d+,3
-1,'000000028000000A6D617274696E','00000002800000145065746572',regex:.*?:\d+,3
-1,'00000002800000145065746572','00000003',regex:.*?:\d+,3
-1,'00000003','000000038000000A6D617274696E',regex:.*?:\d+,3
-1,'000000038000000A6D617274696E','00000003800000145065746572',regex:.*?:\d+,3
-1,'00000003800000145065746572','',regex:.*?:\d+,3
---- TYPES
INT,STRING,STRING,STRING,INT
====
---- QUERY
create table simple_hash_range_ctas
  PRIMARY KEY (id, name) DISTRIBUTE BY HASH(id) INTO 4 BUCKETS,
  RANGE(id, name) SPLIT ROWS ((10, 'martin'), (20, 'Peter')) STORED AS KUDU
as select * from simple_hash
---- RESULTS
'Inserted 0 row(s)'
====
---- QUERY
show table stats simple_hash_range_ctas
---- LABELS
# Rows,Start Key,Stop Key,Leader Replica,# Replicas
---- RESULTS
-1,'','000000008000000A6D617274696E',regex:.*?:\d+,3
-1,'000000008000000A6D617274696E','00000000800000145065746572',regex:.*?:\d+,3
-1,'00000000800000145065746572','00000001',regex:.*?:\d+,3
-1,'00000001','000000018000000A6D617274696E',regex:.*?:\d+,3
-1,'000000018000000A6D617274696E','00000001800000145065746572',regex:.*?:\d+,3
-1,'00000001800000145065746572','00000002',regex:.*?:\d+,3
-1,'00000002','000000028000000A6D617274696E',regex:.*?:\d+,3
-1,'000000028000000A6D617274696E','00000002800000145065746572',regex:.*?:\d+,3
-1,'00000002800000145065746572','00000003',regex:.*?:\d+,3
-1,'00000003','000000038000000A6D617274696E',regex:.*?:\d+,3
-1,'000000038000000A6D617274696E','00000003800000145065746572',regex:.*?:\d+,3
-1,'00000003800000145065746572','',regex:.*?:\d+,3
---- TYPES
INT,STRING,STRING,STRING,INT
====
---- QUERY
-- Test HASH defaults to all columns
create table simple_hash_all_columns (id int, name string, valf float, vali bigint,
  PRIMARY KEY (id, name)) DISTRIBUTE BY HASH INTO 4 BUCKETS STORED AS KUDU
---- RESULTS
====
---- QUERY
show table stats simple_hash_all_columns
---- LABELS
# Rows,Start Key,Stop Key,Leader Replica,# Replicas
---- RESULTS
-1,'','00000001',regex:.*?:\d+,3
-1,'00000001','00000002',regex:.*?:\d+,3
-1,'00000002','00000003',regex:.*?:\d+,3
-1,'00000003','',regex:.*?:\d+,3
---- TYPES
INT,STRING,STRING,STRING,INT
====
---- QUERY
-- Test RANGE defaults to all columns
create table simple_range_all_columns (id int, name string, valf float, vali bigint,
  PRIMARY KEY (id, name)) DISTRIBUTE BY RANGE SPLIT ROWS ((1, 'a'), (2, 'b'))
  STORED AS KUDU
---- RESULTS
====
---- QUERY
show table stats simple_range_all_columns
---- LABELS
# Rows,Start Key,Stop Key,Leader Replica,# Replicas
---- RESULTS
-1,'','8000000161',regex:.*?:\d+,3
-1,'8000000161','8000000262',regex:.*?:\d+,3
-1,'8000000262','',regex:.*?:\d+,3
---- TYPES
INT,STRING,STRING,STRING,INT
====
